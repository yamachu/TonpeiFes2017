<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:behaviors="clr-namespace:Prism.Behaviors;assembly=Prism.Forms" xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms" prism:ViewModelLocator.AutowireViewModel="True" x:Class="TonpeiFes.Forms.Views.Pages.PlanningListRootPage"
    xmlns:segments="clr-namespace:SegmentedControl.FormsPlugin.Abstractions;assembly=SegmentedControl.FormsPlugin.Abstractions"
    xmlns:controls="clr-namespace:TonpeiFes.Forms.Views.Controls"
    xmlns:cells="clr-namespace:TonpeiFes.Forms.Views.Cells"
    xmlns:iconize="clr-namespace:FormsPlugin.Iconize;assembly=FormsPlugin.Iconize"
    xmlns:cv="clr-namespace:TonpeiFes.Forms.Converters;assembly=TonpeiFes.Forms"
    x:Name="root" Title="{Binding Title}" NavigationPage.HasNavigationBar="{StaticResource IsAndroid}" >
    <ContentPage.Resources>
        <ResourceDictionary>
            <OnPlatform x:Key="HeaderCellHeight" x:TypeArguments="x:Double" iOS="28" />
            <OnPlatform x:Key="SearchBarWidthRequest" x:TypeArguments="x:Double" iOS="1" Android="-1" />
            <OnPlatform x:Key="HeaderPadding" x:TypeArguments="Thickness" iOS="16,0" Android="16,8" />
            <OnPlatform x:Key="LabelFontSize" x:TypeArguments="x:Double" iOS="16" Android="18" />
            <OnPlatform x:Key="LabelFontType" x:TypeArguments="FontAttributes" iOS="Bold" />
            <cv:ChainConverter x:Key="IgnoreEmptyString">
                <cv:IsNullOrEmptyOrWhitespaceConverter />
                <cv:BooleanInverseConverter />
            </cv:ChainConverter>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem Icon="{Binding IconSource.Value}" Command="{Binding FavButtonClickCommand}" />
    </ContentPage.ToolbarItems>

    <StackLayout Spacing="0">
        <!--  iOSは横画面にすると20のパティングいらない  -->
        <!--  ToDo: RotationHandlingしてPaddingを動的に変更してレンダリングし直す  -->
        <StackLayout Orientation="Horizontal" BackgroundColor="{StaticResource Primary}" Spacing="0" Padding="{StaticResource NonNavPagePadding}">
            <ContentView Padding="16,0,0,0" IsVisible="{StaticResource IsIOS}">
                <Image Source="{Binding IconSource.Value}">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding FavButtonClickCommand}" />
                    </Image.GestureRecognizers>
                </Image>
            </ContentView>
            <SearchBar Text="{Binding SearchQuery.Value, Mode=TwoWay}" Placeholder="キーワード検索" HorizontalOptions="FillAndExpand" BackgroundColor="{StaticResource Primary}" CancelButtonColor="White" WidthRequest="{StaticResource SearchBarWidthRequest}">
                <SearchBar.PlaceholderColor>
                    <OnPlatform x:TypeArguments="Color" Android="#99FFFFFF" />
                </SearchBar.PlaceholderColor>
                <SearchBar.TextColor>
                    <OnPlatform x:TypeArguments="Color" Android="White" />
                </SearchBar.TextColor>
            </SearchBar>
            
        </StackLayout>
        <StackLayout Padding="{StaticResource SegmentedControlPadding}">
            <segments:SegmentedControl SelectedSegment="{Binding SelectedSegment.Value, Mode=OneWayToSource}" TintColor="{StaticResource Primary}" SelectedTextColor="{StaticResource Text}">
                <segments:SegmentedControl.Children>
                    <segments:SegmentedControlOption Text="{Binding Source={x:Reference root}, Path=BindingContext.OutdoorSegment}" />
                    <segments:SegmentedControlOption Text="{Binding Source={x:Reference root}, Path=BindingContext.IndoorSegment}" />
                </segments:SegmentedControl.Children>
            </segments:SegmentedControl>
        </StackLayout>
        <controls:SeparatorControl Color="{StaticResource Separator}" />

        <ListView HasUnevenRows="true" IsGroupingEnabled="true" ItemsSource="{Binding Plannings}" GroupDisplayBinding="{Binding Key.Key}">
            <ListView.Behaviors>
                <behaviors:EventToCommandBehavior EventName="ItemTapped" Command="{Binding SelectedItemCommand}" EventArgsParameterPath="Item" />
            </ListView.Behaviors>
            <ListView.GroupHeaderTemplate>
                <DataTemplate>
                    <ViewCell Height="{StaticResource HeaderCellHeight}">
                        <!--  ファイルをまたぐといい感じにバインド出来ないorz  -->
                        <!--<cells:IconedListHeaderViewCell />-->
                        <StackLayout VerticalOptions="Center" BackgroundColor="{StaticResource ListHeader}" Padding="{StaticResource HeaderPadding}" Orientation="Horizontal">
                            <Label Text="{Binding Key.Key}" VerticalOptions="Center" VerticalTextAlignment="Center"
                                FontSize="{StaticResource LabelFontSize}" FontAttributes="{StaticResource LabelFontType}" HorizontalOptions="StartAndExpand" />
                            <iconize:IconButton Text="ion-ios-information-outline" WidthRequest="{StaticResource LabelFontSize}" HeightRequest="{StaticResource LabelFontSize}"
                                HorizontalOptions="EndAndExpand" IsVisible="{Binding Key.Source, Converter={StaticResource IgnoreEmptyString}}"
                                CommandParameter="{Binding Key.Key}"
                                Command="{Binding Source={x:Reference root}, Path=BindingContext.OpenPlceDetailCommand}" />
                        </StackLayout>
                    </ViewCell>
                </DataTemplate>
            </ListView.GroupHeaderTemplate>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <cells:PlanningViewCell />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </StackLayout>
</ContentPage>
